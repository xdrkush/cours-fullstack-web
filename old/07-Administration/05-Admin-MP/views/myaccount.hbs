{{!-- 
    Page Mon Compte
    * Vous devez absolument mettre un mail valide pour votre user vu que le mail est envoyer depuis req.session.email
    L'email JojoCoin2019 @ gmail.com est mis a disposition mais sinon vous devez configurer vos parametre de votre boite mail
    La personne qui repond l'explique très bien ici : https://stackoverflow.com/questions/54219737/nodejs-nodemailer-username-and-password-not-accepted

--}}
<div class="cont txt-center">
    <h2>Bienvenu sur la page du compte de <u> {{ sess.pseudo }} </u> </h2>
    <div class="flx it-center ju-center">
        <img class="img100" src="{{sess.imgUser}}" alt="">
        <div class="column">
            <p>Email: {{ sess.email }}</p>
            <p>isVerified: {{ sess.isVerified }} </p>
        </div>
    </div>
    </br>
    <div class="flx ju-center">
        <div class="itm">
            <h3>Mon premier mail avec nodemailer</h3>
            <a href="/mailer/test">
                <button>test a l'art hash</button>
            </a>
        </div>
        <div class="itm">
            <h3>Mon premier mail de Vérification</h3>
            <a href="/mailer/verifMail">
                <button>Mail de vérification</button>
            </a>
        </div>
    </div>
</div>

<div class="cont">
    <h3>Message Privé</h3>
    <button class="accordion">Message reçu</button>
    <div class="panel">
        {{#each dbMpRecuReverse }}

        <div class="bdr-left itm">
            <div class="flx">
                <p class="itm"><u>De la part de</u>: {{ author }} Pour: {{ dest }} <u>Le</u>: {{ createDate }}
                    <u>Sujet</u>:
                    {{ subject }} </p>
            </div>
            
            <div class="flx">
                <a href="/api/delMp/{{_id}}">
                    <button class="btn-primary bdr-radius">Supprimer</button>
                </a>
                <p>{{ message }}</p>
            </div>
        </div>

        {{/each}}
    </div>

    <button class="accordion">Message envoyer</button>
    <div class="panel">
        {{#each dbMpEnvoyerReverse }}

        <div class="bdr-left itm">
            <div class="flx">
                <p class="itm"><u>De la part de</u>: {{ author }} Pour: {{ dest }} <u>Le</u>: {{ createDate }}
                    <u>Sujet</u>:
                    {{ subject }} </p>
            </div>
            <div class="flx">
                <a href="/api/delMp/{{_id}}">
                    <button class="btn-primary bdr-radius">Supprimer</button>
                </a>
                <p>{{ message }}</p>
            </div>
        </div>

        {{/each}}
    </div>

    <button class="accordion">Nouveau message</button>
    <div class="panel">
        <form class="column middle" action="/api/createMp" method="post" enctype="application/x-www-form-urlencoded">
            <div class="flx">
                <label for="">Sujet : </label>
                <input type="text" class="form-control itm bdr-radius" name="subject" />
                <label for="recipient-name" class="col-form-label">Pour : </label>

                <select type="text" name="destId" class="form-control">
                    {{#each dbUser }}
                    <option value="{{ _id }}">
                        <div class="row">
                            {{pseudo}} ({{ _id }})
                        </div>
                    </option>
                    {{/each}}
                </select>
            </div>
            <div class="flx">
                <textarea class="itm" name="message" cols="100" rows="10"
                    placeholder="Ajouter votre commentaire"></textarea>
            </div>
            <input class="bdr-radius btn-secondary" type="submit" value="OK" />
        </form>
    </div>
</div>


<script>
    /*
     * Tuto W3C 
     * https://www.w3schools.com/howto/howto_js_accordion.asp
     */
    var acc = document.getElementsByClassName("accordion");
    var i;

    for (i = 0; i < acc.length; i++) {
        acc[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var panel = this.nextElementSibling;
            if (panel.style.display === "block") {
                panel.style.display = "none";
            } else {
                panel.style.display = "block";
            }
        });
    }
</script>

<style>
    /*
     * Tuto W3C 
     * https://www.w3schools.com/howto/howto_js_accordion.asp
     */
    .accordion {
        background-color: #eee;
        color: #444;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        text-align: left;
        border: none;
        outline: none;
        transition: 0.4s;
    }

    .active,
    .accordion:hover {
        background-color: #ccc;
    }

    .panel {
        padding: 0 18px;
        background-color: white;
        display: none;
        overflow: hidden;
    }
</style>